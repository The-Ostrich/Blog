"use strict";(self.webpackChunkpwsh_blog=self.webpackChunkpwsh_blog||[]).push([[54],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return r?a.createElement(h,l(l({ref:t},d),{},{components:r})):a.createElement(h,l({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5976:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:3,title:"Barracuda Email Security API Powershell Module"},l=void 0,i={unversionedId:"BarracudaESSAPI",id:"BarracudaESSAPI",title:"Barracuda Email Security API Powershell Module",description:'Barracuda\'s cloud spam filter service works really well, however as a MSP partner, they do not provide "good" reporting or methods of excluding aliases, shared mailboxes and distribution groups from billing. Their most recent API exposed a few useful endpoints making our lives easier. As always, the API documentation is not all that helpful. I set out on a mission to make a useful tool.',source:"@site/docs/BarracudaESSAPI.md",sourceDirName:".",slug:"/BarracudaESSAPI",permalink:"/docs/BarracudaESSAPI",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Barracuda Email Security API Powershell Module"},sidebar:"tutorialSidebar",previous:{title:"ImgBB.com API Powershell Module",permalink:"/docs/ImgBBAPI"},next:{title:"It was a sick Ostrich !",permalink:"/docs/intro"}},s={},u=[{value:"Examples",id:"examples",level:3},{value:"Get OAthtoken",id:"get-oathtoken",level:3},{value:"Get all partner tenant usage",id:"get-all-partner-tenant-usage",level:3},{value:"Get individual tenant email addresses and exclusions",id:"get-individual-tenant-email-addresses-and-exclusions",level:3},{value:"Add email address to exclusion list",id:"add-email-address-to-exclusion-list",level:3},{value:"Remove email address from exclusion list",id:"remove-email-address-from-exclusion-list",level:3},{value:"Github Repository for the project.",id:"github-repository-for-the-project",level:3}],d={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:""}),(0,n.kt)("p",null,'Barracuda\'s cloud spam filter service works really well, however as a MSP partner, they do not provide "good" reporting or methods of excluding aliases, shared mailboxes and distribution groups from billing. Their most recent API exposed a few useful endpoints making our lives easier. As always, the API documentation is not all that helpful. I set out on a mission to make a useful tool. '),(0,n.kt)("h3",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Install-Module BarracudaESSAPI\nImport-Module BarracudaESSAPI\n")),(0,n.kt)("h3",{id:"get-oathtoken"},"Get OAthtoken"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'$Oath = Get-ESSAuthToken -ClientID "YourID" -ClientSecret "YourSecret"\n')),(0,n.kt)("h3",{id:"get-all-partner-tenant-usage"},"Get all partner tenant usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'Get-ESSPartnerConsumption -OauthToken $Oath -PartnerName "PartnerUserName"\n')),(0,n.kt)("h3",{id:"get-individual-tenant-email-addresses-and-exclusions"},"Get individual tenant email addresses and exclusions"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'Get-ESSCompanyConsumption -OathToken $Oath -Company "CompanyUserName"\n')),(0,n.kt)("h3",{id:"add-email-address-to-exclusion-list"},"Add email address to exclusion list"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'Add-ESSExclusion -OauthToken $Oath -Company "CompanyUserName" -User "Email@ToExclude.com"\n')),(0,n.kt)("h3",{id:"remove-email-address-from-exclusion-list"},"Remove email address from exclusion list"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'Remove-ESSExclusion -OauthToken $Oath -Company "CompanyUserName" -User "Email@ToExclude.com"\n')),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"github-repository-for-the-project"},"Github Repository for the project."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Largehawiian/BarracudaESSAPI"},"Barracuda ESS API Powershll Module")))}c.isMDXComponent=!0}}]);